{
  "$schema": "https://nyxbui.design/schema/registry-item.json",
  "name": "command",
  "type": "registry:ui",
  "author": "nyxb (https://nyxbui.design)",
  "dependencies": [
    "cmdk@1.0.0"
  ],
  "registryDependencies": [
    "dialog"
  ],
  "files": [
    {
      "path": "ui/command.tsx",
      "content": "\"use client\"\n\nimport type { DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n   React.ElementRef<typeof CommandPrimitive>,\n   React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n   <CommandPrimitive\n      ref={ref}\n      className={cn(\n         \"bg-popover text-popover-foreground flex size-full flex-col overflow-hidden rounded-md\",\n         className,\n      )}\n      {...props}\n   />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nfunction CommandDialog({ children, ...props }: DialogProps) {\n   return (\n      <Dialog {...props}>\n         <DialogContent className=\"overflow-hidden p-0\">\n            <Command className=\"[&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:size-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:size-5\">\n               {children}\n            </Command>\n         </DialogContent>\n      </Dialog>\n   )\n}\n\nconst CommandInput = React.forwardRef<\n   React.ElementRef<typeof CommandPrimitive.Input>,\n   React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n   <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n      <Search className=\"mr-2 size-4 shrink-0 opacity-50\" />\n      <CommandPrimitive.Input\n         ref={ref}\n         className={cn(\n            \"placeholder:text-muted-foreground flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-none disabled:cursor-not-allowed disabled:opacity-50\",\n            className,\n         )}\n         {...props}\n      />\n   </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n   React.ElementRef<typeof CommandPrimitive.List>,\n   React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n   <CommandPrimitive.List\n      ref={ref}\n      className={cn(\n         \"max-h-[300px] overflow-y-auto overflow-x-hidden\",\n         className,\n      )}\n      {...props}\n   />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n   React.ElementRef<typeof CommandPrimitive.Empty>,\n   React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n   <CommandPrimitive.Empty\n      ref={ref}\n      className=\"py-6 text-center text-sm\"\n      {...props}\n   />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n   React.ElementRef<typeof CommandPrimitive.Group>,\n   React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n   <CommandPrimitive.Group\n      ref={ref}\n      className={cn(\n         \"text-foreground [&_[cmdk-group-heading]]:text-muted-foreground overflow-hidden p-1 [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium\",\n         className,\n      )}\n      {...props}\n   />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n   React.ElementRef<typeof CommandPrimitive.Separator>,\n   React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n   <CommandPrimitive.Separator\n      ref={ref}\n      className={cn(\"bg-border -mx-1 h-px\", className)}\n      {...props}\n   />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n   React.ElementRef<typeof CommandPrimitive.Item>,\n   React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n   <CommandPrimitive.Item\n      ref={ref}\n      className={cn(\n         \"data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n         className,\n      )}\n      {...props}\n   />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nfunction CommandShortcut({\n   className,\n   ...props\n}: React.HTMLAttributes<HTMLSpanElement>) {\n   return (\n      <span\n         className={cn(\n            \"text-muted-foreground ml-auto text-xs tracking-widest\",\n            className,\n         )}\n         {...props}\n      />\n   )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n   Command,\n   CommandDialog,\n   CommandInput,\n   CommandList,\n   CommandEmpty,\n   CommandGroup,\n   CommandItem,\n   CommandShortcut,\n   CommandSeparator,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}