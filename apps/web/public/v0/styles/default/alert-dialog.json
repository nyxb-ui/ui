{
  "$schema": "https://nyxbui.design/schema/registry-item.json",
  "name": "alert-dialog",
  "type": "registry:ui",
  "author": "nyxb (https://nyxbui.design)",
  "dependencies": [
    "@radix-ui/react-alert-dialog"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "ui/alert-dialog.tsx",
      "content": "\"use client\"\n\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\nimport type { VariantProps } from \"class-variance-authority\"\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n   React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n   React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n   <AlertDialogPrimitive.Overlay\n      className={cn(\n         \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0  fixed inset-0 z-50 bg-black/80\",\n         className,\n      )}\n      {...props}\n      ref={ref}\n   />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n   React.ElementRef<typeof AlertDialogPrimitive.Content>,\n   React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n   <AlertDialogPortal>\n      <AlertDialogOverlay />\n      <AlertDialogPrimitive.Content\n         ref={ref}\n         className={cn(\n            \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] fixed left-1/2 top-1/2 z-50 grid w-full max-w-lg -translate-x-1/2 -translate-y-1/2 gap-4 border p-6 shadow-lg duration-200 sm:rounded-lg\",\n            className,\n         )}\n         {...props}\n      />\n   </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nfunction AlertDialogHeader({\n   className,\n   ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n   return (\n      <div\n         className={cn(\n            \"flex flex-col space-y-2 text-center sm:text-left\",\n            className,\n         )}\n         {...props}\n      />\n   )\n}\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nfunction AlertDialogFooter({\n   className,\n   ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n   return (\n      <div\n         className={cn(\n            \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n            className,\n         )}\n         {...props}\n      />\n   )\n}\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n   React.ElementRef<typeof AlertDialogPrimitive.Title>,\n   React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n   <AlertDialogPrimitive.Title\n      ref={ref}\n      className={cn(\"text-lg font-semibold\", className)}\n      {...props}\n   />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n   React.ElementRef<typeof AlertDialogPrimitive.Description>,\n   React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n   <AlertDialogPrimitive.Description\n      ref={ref}\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n   />\n))\nAlertDialogDescription.displayName =\n   AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n   React.ElementRef<typeof AlertDialogPrimitive.Action>,\n   React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action> &\n      VariantProps<typeof buttonVariants>\n>(({ className, variant, size, ...props }, ref) => (\n   <AlertDialogPrimitive.Action\n      ref={ref}\n      className={cn(buttonVariants({ variant, size }), className)}\n      {...props}\n   />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n   React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n   React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel> &\n      VariantProps<typeof buttonVariants>\n>(({ className, variant = \"outline\", size, ...props }, ref) => (\n   <AlertDialogPrimitive.Cancel\n      ref={ref}\n      className={cn(\n         buttonVariants({ variant, size }),\n         \"mt-2 sm:mt-0\",\n         className,\n      )}\n      {...props}\n   />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n   AlertDialog,\n   AlertDialogPortal,\n   AlertDialogOverlay,\n   AlertDialogTrigger,\n   AlertDialogContent,\n   AlertDialogHeader,\n   AlertDialogFooter,\n   AlertDialogTitle,\n   AlertDialogDescription,\n   AlertDialogAction,\n   AlertDialogCancel,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}