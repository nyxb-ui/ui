{
  "$schema": "https://nyxbui.design/schema/registry-item.json",
  "name": "animated-feature-card-7",
  "type": "registry:example",
  "author": "nyxb (https://nyxbui.design)",
  "files": [
    {
      "path": "examples/animated-feature-card-7.tsx",
      "content": "\"use client\"\n\nimport { motion, useAnimation, useInView } from \"framer-motion\"\nimport {\n   BarChart,\n   File,\n   Globe,\n   HeartHandshake,\n   Rss,\n   Shield,\n} from \"lucide-react\"\nimport { useEffect, useId, useRef, useState } from \"react\"\nimport { cn } from \"@/lib/utils\"\nimport Marquee from \"@/components/ui/marquee\"\n\nconst tiles = [\n   {\n      icon: <HeartHandshake className=\"size-full\" />,\n      bg: (\n         <div className=\"pointer-events-none absolute left-1/2 top-1/2 size-1/2 -translate-x-1/2 -translate-y-1/2 overflow-visible rounded-full bg-gradient-to-r from-orange-600 via-rose-600 to-violet-600 opacity-70 blur-[20px]\"></div>\n      ),\n   },\n   {\n      icon: <Globe className=\"size-full\" />,\n      bg: (\n         <div className=\"pointer-events-none absolute left-1/2 top-1/2 size-1/2 -translate-x-1/2 -translate-y-1/2 overflow-visible rounded-full bg-gradient-to-r from-cyan-500 via-blue-500 to-indigo-500 opacity-70 blur-[20px]\"></div>\n      ),\n   },\n   {\n      icon: <File className=\"size-full\" />,\n      bg: (\n         <div className=\"pointer-events-none absolute left-1/2 top-1/2 size-1/2 -translate-x-1/2 -translate-y-1/2 overflow-visible rounded-full bg-gradient-to-r from-green-500 via-teal-500 to-emerald-600 opacity-70 blur-[20px]\"></div>\n      ),\n   },\n   {\n      icon: <Shield className=\"size-full\" />,\n      bg: (\n         <div className=\"pointer-events-none absolute left-1/2 top-1/2 size-1/2 -translate-x-1/2 -translate-y-1/2 overflow-visible rounded-full bg-gradient-to-r from-yellow-400 via-orange-500 to-yellow-600 opacity-70 blur-[20px]\"></div>\n      ),\n   },\n   {\n      icon: <Rss className=\"size-full\" />,\n      bg: (\n         <div className=\"pointer-events-none absolute left-1/2 top-1/2 size-1/2 -translate-x-1/2 -translate-y-1/2 overflow-visible rounded-full bg-gradient-to-r from-orange-600 via-rose-600 to-violet-600 opacity-70 blur-[20px]\"></div>\n      ),\n   },\n   {\n      icon: <BarChart className=\"size-full\" />,\n      bg: (\n         <div className=\"pointer-events-none absolute left-1/2 top-1/2 size-1/2 -translate-x-1/2 -translate-y-1/2 overflow-visible rounded-full bg-gradient-to-r from-gray-600 via-gray-500 to-gray-400 opacity-70 blur-[20px]\"></div>\n      ),\n   },\n]\n\nfunction shuffleArray(array: any[]) {\n   let currentIndex = array.length\n   let randomIndex\n   // While there remain elements to shuffle.\n   while (currentIndex !== 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex)\n      currentIndex--\n      // And swap it with the current element.\n      ;[array[currentIndex], array[randomIndex]] = [\n         array[randomIndex],\n         array[currentIndex],\n      ]\n   }\n   return array\n}\n\nfunction Card(card: { icon: JSX.Element; bg: JSX.Element }) {\n   const id = useId()\n   const controls = useAnimation()\n   const ref = useRef(null)\n   const inView = useInView(ref, { once: true })\n\n   useEffect(() => {\n      if (inView) {\n         controls.start({\n            opacity: 1,\n            transition: {\n               delay: Math.random() * 2,\n               ease: \"easeOut\",\n               duration: 1,\n            },\n         })\n      }\n   }, [controls, inView])\n\n   return (\n      <motion.div\n         key={id}\n         ref={ref}\n         initial={{ opacity: 0 }}\n         animate={controls}\n         className={cn(\n            \"relative size-20 cursor-pointer overflow-hidden rounded-2xl border p-4\",\n            // light styles\n            \"bg-white\",\n            // dark styles\n            \"transform-gpu dark:bg-transparent dark:[border:1px_solid_rgba(255,255,255,.1)] dark:[box-shadow:0_-20px_80px_-20px_#ffffff1f_inset]\",\n         )}\n      >\n         {card.icon}\n         {card.bg}\n      </motion.div>\n   )\n}\n\nexport default function FeatureCard7() {\n   const containerVariants = {\n      initial: {},\n      whileHover: {\n         transition: {\n            staggerChildren: 0.1,\n         },\n      },\n   }\n   const [randomTiles1] = useState(() => shuffleArray([...tiles]))\n   const [randomTiles2] = useState(() => shuffleArray([...tiles]))\n   const [randomTiles3] = useState(() => shuffleArray([...tiles]))\n   const [randomTiles4] = useState(() => shuffleArray([...tiles]))\n\n   return (\n      <div className=\"relative size-full max-w-lg transform-gpu rounded-lg border bg-white [box-shadow:0_0_0_1px_rgba(0,0,0,.03),0_2px_4px_rgba(0,0,0,.05),0_12px_24px_rgba(0,0,0,.05)] md:max-h-[500px] dark:bg-black dark:[border:1px_solid_rgba(255,255,255,.1)] dark:[box-shadow:0_-20px_80px_-20px_#ffffff1f_inset]\">\n         <motion.div\n            variants={containerVariants}\n            initial=\"initial\"\n            whileHover=\"whileHover\"\n            className=\"flex size-full cursor-pointer flex-col items-start justify-between\"\n         >\n            <div className=\"group relative flex h-[300px] w-full cursor-pointer flex-col items-center justify-center gap-y-1 overflow-hidden rounded-t-xl p-4\">\n               <div className=\"relative flex flex-col items-center justify-center gap-y-2 px-10\">\n                  <Marquee\n                     reverse\n                     className=\"-delay-[200ms] [--duration:20s]\"\n                     repeat={4}\n                  >\n                     {randomTiles1.map((review, idx) => (\n                        <Card key={idx} {...review} />\n                     ))}\n                  </Marquee>\n                  <Marquee reverse className=\"[--duration:30s]\" repeat={4}>\n                     {randomTiles2.map((review, idx) => (\n                        <Card key={idx} {...review} />\n                     ))}\n                  </Marquee>\n                  <Marquee\n                     reverse\n                     className=\"-delay-[200ms] [--duration:20s]\"\n                     repeat={4}\n                  >\n                     {randomTiles3.map((review, idx) => (\n                        <Card key={idx} {...review} />\n                     ))}\n                  </Marquee>\n                  <Marquee reverse className=\"[--duration:30s]\" repeat={4}>\n                     {randomTiles4.map((review, idx) => (\n                        <Card key={idx} {...review} />\n                     ))}\n                  </Marquee>\n                  <div className=\"dark:from-background pointer-events-none absolute inset-y-0 left-0 w-1/3 bg-gradient-to-r from-white\"></div>\n                  <div className=\"dark:from-background pointer-events-none absolute inset-y-0 right-0 w-1/3 bg-gradient-to-l from-white\"></div>\n               </div>\n            </div>\n            <div className=\"flex w-full flex-col items-start border-t border-neutral-200 p-4 dark:border-neutral-800\">\n               <h2 className=\"text-xl font-semibold\">Integrations</h2>\n               <p className=\"text-base font-normal text-neutral-500 dark:text-neutral-400\">\n                  Integrate with all your favourite apps\n               </p>\n            </div>\n         </motion.div>\n      </div>\n   )\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}