{
  "$schema": "https://nyxbui.design/schema/registry-item.json",
  "name": "drawer",
  "type": "registry:ui",
  "author": "nyxbui (https://nyxbui.design)",
  "dependencies": [
    "vaul",
    "@radix-ui/react-dialog"
  ],
  "files": [
    {
      "path": "ui/drawer.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { ny } from \"~/lib/utils\"\n\nfunction Drawer({\n   shouldScaleBackground = true,\n   ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) {\n   return (\n      <DrawerPrimitive.Root\n         shouldScaleBackground={shouldScaleBackground}\n         {...props}\n      />\n   )\n}\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n   React.ElementRef<typeof DrawerPrimitive.Overlay>,\n   React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n   <DrawerPrimitive.Overlay\n      ref={ref}\n      className={ny(\"fixed inset-0 z-50 bg-black/80\", className)}\n      {...props}\n   />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n   React.ElementRef<typeof DrawerPrimitive.Content>,\n   React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n   <DrawerPortal>\n      <DrawerOverlay />\n      <DrawerPrimitive.Content\n         ref={ref}\n         className={ny(\n            \"bg-background fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border\",\n            className,\n         )}\n         {...props}\n      >\n         <div className=\"bg-muted mx-auto mt-4 h-2 w-[100px] cursor-grab rounded-full active:cursor-grabbing\" />\n         {children}\n      </DrawerPrimitive.Content>\n   </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nfunction DrawerHeader({\n   className,\n   ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n   return (\n      <div\n         className={ny(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n         {...props}\n      />\n   )\n}\nDrawerHeader.displayName = \"DrawerHeader\"\n\nfunction DrawerFooter({\n   className,\n   ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n   return (\n      <div\n         className={ny(\"mt-auto flex flex-col gap-2 p-4\", className)}\n         {...props}\n      />\n   )\n}\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n   React.ElementRef<typeof DrawerPrimitive.Title>,\n   React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n   <DrawerPrimitive.Title\n      ref={ref}\n      className={ny(\n         \"text-lg font-semibold leading-none tracking-tight\",\n         className,\n      )}\n      {...props}\n   />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n   React.ElementRef<typeof DrawerPrimitive.Description>,\n   React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n   <DrawerPrimitive.Description\n      ref={ref}\n      className={ny(\"text-muted-foreground text-sm\", className)}\n      {...props}\n   />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n   Drawer,\n   DrawerPortal,\n   DrawerOverlay,\n   DrawerTrigger,\n   DrawerClose,\n   DrawerContent,\n   DrawerHeader,\n   DrawerFooter,\n   DrawerTitle,\n   DrawerDescription,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}