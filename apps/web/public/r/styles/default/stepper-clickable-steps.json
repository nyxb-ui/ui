{
  "name": "stepper-clickable-steps",
  "type": "registry:example",
  "registryDependencies": [
    "stepper"
  ],
  "files": [
    {
      "path": "example/stepper-clickable-steps.tsx",
      "content": "import { Button } from '~/registry/default/ui/button'\nimport type {\n   StepItem,\n} from '~/registry/default/ui/stepper'\nimport {\n   Step,\n   Stepper,\n   useStepper,\n} from '~/registry/default/ui/stepper'\nimport { toast } from '~/registry/default/ui/use-toast'\n\nconst steps = [\n   { label: 'Step 1' },\n   { label: 'Step 2' },\n   { label: 'Step 3' },\n] satisfies StepItem[]\n\nexport default function StepperDemo() {\n   return (\n      <div className=\"flex w-full flex-col gap-4\">\n         <Stepper\n            initialStep={0}\n            steps={steps}\n            onClickStep={(step, setStep) => {\n               toast({\n                  title: 'Step clicked',\n                  description:\n              'This event is executed globally for all steps. If you want to have an event for a specific step, use the `onClickStep` prop of the independent step.',\n               })\n               setStep(step)\n            }}\n         >\n            {steps.map((stepProps, index) => {\n               return (\n                  <Step key={stepProps.label} {...stepProps}>\n                     <div className=\"bg-secondary text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\n                        <h1 className=\"text-xl\">\n                           Step\n                           {index + 1}\n                        </h1>\n                     </div>\n                  </Step>\n               )\n            })}\n            <Footer />\n         </Stepper>\n      </div>\n   )\n}\n\nfunction Footer() {\n   const {\n      nextStep,\n      prevStep,\n      resetSteps,\n      isDisabledStep,\n      hasCompletedAllSteps,\n      isLastStep,\n      isOptionalStep,\n   } = useStepper()\n   return (\n      <>\n         {hasCompletedAllSteps && (\n            <div className=\"bg-secondary text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\n               <h1 className=\"text-xl\">Woohoo! All steps completed! ðŸŽ‰</h1>\n            </div>\n         )}\n         <div className=\"flex w-full justify-end gap-2\">\n            {hasCompletedAllSteps\n               ? (\n                     <Button size=\"sm\" onClick={resetSteps}>\n                        Reset\n                     </Button>\n                  )\n               : (\n                     <>\n                        <Button\n                           disabled={isDisabledStep}\n                           onClick={prevStep}\n                           size=\"sm\"\n                           variant=\"secondary\"\n                        >\n                           Prev\n                        </Button>\n                        <Button size=\"sm\" onClick={nextStep}>\n                           {isLastStep ? 'Finish' : isOptionalStep ? 'Skip' : 'Next'}\n                        </Button>\n                     </>\n                  )}\n         </div>\n      </>\n   )\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}
