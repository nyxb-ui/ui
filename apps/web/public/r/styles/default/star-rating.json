{
  "name": "star-rating",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "ui/star-rating.tsx",
      "content": "import type { Dispatch, SetStateAction } from 'react'\nimport React from 'react'\nimport type { LucideIcon, LucideProps } from 'lucide-react'\nimport { StarIcon } from 'lucide-react'\n\nimport { ny } from '~/lib/utils'\n\ninterface StarWrapperProps {\n   value?: number\n   setValue?: Dispatch<SetStateAction<number>>\n   numStars?: number\n   icon?: LucideIcon\n   disabled?: boolean\n   wrapperProps?: React.HTMLAttributes<HTMLDivElement>\n   iconProps?: LucideProps\n   showcase?: boolean\n}\n\nfunction StarRating({\n   numStars = 5,\n   icon,\n   setValue,\n   value,\n   disabled,\n   showcase,\n   iconProps = {},\n   wrapperProps = {},\n}: StarWrapperProps) {\n   const { className: wrapperClassName, ...restWrapperProps } = wrapperProps\n   const { className: iconClassName, ...restIconProps } = iconProps\n   const IconComponent = icon\n\n   return (\n      <div className={ny('flex items-center gap-1', wrapperClassName)} {...restWrapperProps}>\n         {Array.from({ length: numStars }, (_, i) => {\n            const isRated = i < value!\n            const styledIconProps: LucideProps = {\n               onMouseEnter: () => !showcase && !disabled && setValue!(i + 1),\n               className: ny('fill-primary stroke-primary size-6', {\n                  'opacity-50 pointer-events-none': disabled,\n                  'transition-transform duration-300 hover:scale-110': !disabled && !showcase,\n                  '!fill-muted !stroke-muted': !isRated,\n               }, iconClassName),\n               ...restIconProps,\n            }\n            return (\n               <div key={i}>\n                  {IconComponent\n                     ? (\n                           <IconComponent {...styledIconProps} />\n                        )\n                     : (\n                           <StarIcon {...styledIconProps} />\n                        )}\n               </div>\n            )\n         })}\n      </div>\n   )\n}\n\nexport { StarRating }\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}
