{
  "$schema": "https://nyxbui.design/schema/registry-item.json",
  "name": "gauge-circle",
  "type": "registry:ui",
  "author": "nyxbui (https://nyxbui.design)",
  "files": [
    {
      "path": "ui/gauge-circle.tsx",
      "content": "import { ny } from \"~/lib/utils\"\n\ninterface Props {\n   max: number\n   value: number\n   min: number\n   gaugePrimaryColor: string\n   gaugeSecondaryColor: string\n   className?: string\n}\n\nexport default function GaugeCircle({\n   max = 100,\n   min = 0,\n   value = 0,\n   gaugePrimaryColor,\n   gaugeSecondaryColor,\n   className,\n}: Props) {\n   const circumference = 2 * Math.PI * 45\n   const percentPx = circumference / 100\n   const currentPercent = ((value - min) / (max - min)) * 100\n\n   return (\n      <div\n         className={ny(\"relative size-40 text-2xl font-semibold\", className)}\n         style={\n            {\n               \"--circle-size\": \"100px\",\n               \"--circumference\": `${circumference}px`,\n               \"--percent-to-px\": `${percentPx}px`,\n               \"--gap-percent\": \"5\",\n               \"--offset-factor\": \"0\",\n               \"--transition-length\": \"1s\",\n               \"--transition-step\": \"200ms\",\n               \"--delay\": \"0s\",\n               \"--percent-to-deg\": \"3.6deg\",\n               transform: \"translateZ(0)\",\n            } as React.CSSProperties\n         }\n      >\n         <svg\n            fill=\"none\"\n            className=\"size-full\"\n            strokeWidth=\"2\"\n            viewBox=\"0 0 100 100\"\n         >\n            {currentPercent <= 90 && currentPercent >= 0 && (\n               <circle\n                  cx=\"50\"\n                  cy=\"50\"\n                  r=\"45\"\n                  strokeWidth=\"10\"\n                  strokeDashoffset=\"0\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"opacity-100\"\n                  style={{\n                     stroke: gaugeSecondaryColor,\n                     strokeDasharray: `${(90 - currentPercent) * percentPx}px ${circumference}px`,\n                     transform: `rotate(calc(1turn - 90deg - (5 * 3.6deg * (1 - 0)))) scaleY(-1)`,\n                     transition: \"all 1s ease 0s\",\n                     transformOrigin: \"50px 50px\",\n                  }}\n               />\n            )}\n            <circle\n               cx=\"50\"\n               cy=\"50\"\n               r=\"45\"\n               strokeWidth=\"10\"\n               strokeDashoffset=\"0\"\n               strokeLinecap=\"round\"\n               strokeLinejoin=\"round\"\n               className=\"opacity-100\"\n               style={{\n                  stroke: gaugePrimaryColor,\n                  strokeDasharray: `${currentPercent * percentPx}px ${circumference}px`,\n                  transition: \"1s ease 0s, stroke 1s ease 0s\",\n                  transitionProperty: \"stroke-dasharray,transform\",\n                  transform: \"rotate(calc(-90deg + 5 * 0 * 3.6deg))\",\n                  transformOrigin: \"50px 50px\",\n               }}\n            />\n         </svg>\n         <span\n            className=\"animate-in fade-in absolute inset-0 m-auto size-fit\"\n            style={{\n               animationDelay: \"0s\",\n               transitionDuration: \"1s\",\n            }}\n         >\n            {Math.round(currentPercent)}\n         </span>\n      </div>\n   )\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}