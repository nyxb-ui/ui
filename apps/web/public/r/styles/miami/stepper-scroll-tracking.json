{
  "name": "stepper-scroll-tracking",
  "type": "registry:example",
  "registryDependencies": [
    "stepper"
  ],
  "files": [
    {
      "path": "example/stepper-scroll-tracking.tsx",
      "content": "import { Button } from '~/registry/miami/ui/button'\nimport type {\n   StepItem,\n} from '~/registry/miami/ui/stepper'\nimport {\n   Step,\n   Stepper,\n   useStepper,\n} from '~/registry/miami/ui/stepper'\n\nconst steps = [\n   { label: 'Step 1' },\n   { label: 'Step 2' },\n   { label: 'Step 3' },\n   { label: 'Step 4' },\n   { label: 'Step 5' },\n   { label: 'Step 6' },\n] satisfies StepItem[]\n\nexport default function StepperDemo() {\n   return (\n      <div className=\"flex w-full flex-col gap-4\">\n         <Stepper\n            orientation=\"vertical\"\n            initialStep={0}\n            steps={steps}\n            scrollTracking\n         >\n            {steps.map((stepProps, index) => {\n               return (\n                  <Step key={stepProps.label} {...stepProps}>\n                     <div className=\"bg-secondary text-primary my-4 flex h-40 items-center justify-center rounded-md border\">\n                        <h1 className=\"text-xl\">\n                           Step\n                           {index + 1}\n                        </h1>\n                     </div>\n                     <StepButtons />\n                  </Step>\n               )\n            })}\n            <FinalStep />\n         </Stepper>\n      </div>\n   )\n}\n\nfunction StepButtons() {\n   const { nextStep, prevStep, isLastStep, isOptionalStep, isDisabledStep }\n    = useStepper()\n   return (\n      <div className=\"mb-4 flex w-full gap-2\">\n         <Button\n            disabled={isDisabledStep}\n            onClick={prevStep}\n            size=\"sm\"\n            variant=\"secondary\"\n         >\n            Prev\n         </Button>\n         <Button size=\"sm\" onClick={nextStep}>\n            {isLastStep ? 'Finish' : isOptionalStep ? 'Skip' : 'Next'}\n         </Button>\n      </div>\n   )\n}\n\nfunction FinalStep() {\n   const { hasCompletedAllSteps, resetSteps } = useStepper()\n\n   if (!hasCompletedAllSteps)\n      return null\n\n   return (\n      <>\n         <div className=\"bg-secondary text-primary flex h-40 items-center justify-center rounded-md border\">\n            <h1 className=\"text-xl\">Woohoo! All steps completed! ðŸŽ‰</h1>\n         </div>\n         <div className=\"flex w-full justify-end gap-2\">\n            <Button size=\"sm\" onClick={resetSteps}>\n               Reset\n            </Button>\n         </div>\n      </>\n   )\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}
