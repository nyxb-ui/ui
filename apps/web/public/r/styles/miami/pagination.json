{
  "name": "pagination",
  "type": "registry:ui",
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "ui/pagination.tsx",
      "content": "import * as React from 'react'\nimport {\n   ChevronLeftIcon,\n   ChevronRightIcon,\n   DotsHorizontalIcon,\n} from '@radix-ui/react-icons'\n\nimport { ny } from '~/lib/utils'\nimport type { ButtonProps } from '~/registry/miami/ui/button'\nimport { buttonVariants } from '~/registry/miami/ui/button'\n\nfunction Pagination({ className, ...props }: React.ComponentProps<'nav'>) {\n   return (\n      <nav\n         role=\"navigation\"\n         aria-label=\"pagination\"\n         className={ny('mx-auto flex w-full justify-center', className)}\n         {...props}\n      />\n   )\n}\nPagination.displayName = 'Pagination'\n\nconst PaginationContent = React.forwardRef<\n   HTMLUListElement,\n   React.ComponentProps<'ul'>\n>(({ className, ...props }, ref) => (\n   <ul\n      ref={ref}\n      className={ny('flex flex-row items-center gap-1', className)}\n      {...props}\n   />\n))\nPaginationContent.displayName = 'PaginationContent'\n\nconst PaginationItem = React.forwardRef<\n   HTMLLIElement,\n   React.ComponentProps<'li'>\n>(({ className, ...props }, ref) => (\n   <li ref={ref} className={ny('', className)} {...props} />\n))\nPaginationItem.displayName = 'PaginationItem'\n\ntype PaginationLinkProps = {\n   isActive?: boolean\n} & Pick<ButtonProps, 'size'> &\nReact.ComponentProps<'a'>\n\nfunction PaginationLink({\n   className,\n   isActive,\n   size = 'icon',\n   ...props\n}: PaginationLinkProps) {\n   return (\n      <a\n         aria-current={isActive ? 'page' : undefined}\n         className={ny(\n            buttonVariants({\n               variant: isActive ? 'outline' : 'ghost',\n               size,\n            }),\n            className,\n         )}\n         {...props}\n      />\n   )\n}\nPaginationLink.displayName = 'PaginationLink'\n\nfunction PaginationPrevious({\n   className,\n   ...props\n}: React.ComponentProps<typeof PaginationLink>) {\n   return (\n      <PaginationLink\n         aria-label=\"Go to previous page\"\n         size=\"default\"\n         className={ny('gap-1 pl-2.5', className)}\n         {...props}\n      >\n         <ChevronLeftIcon className=\"size-4\" />\n         <span>Previous</span>\n      </PaginationLink>\n   )\n}\nPaginationPrevious.displayName = 'PaginationPrevious'\n\nfunction PaginationNext({\n   className,\n   ...props\n}: React.ComponentProps<typeof PaginationLink>) {\n   return (\n      <PaginationLink\n         aria-label=\"Go to next page\"\n         size=\"default\"\n         className={ny('gap-1 pr-2.5', className)}\n         {...props}\n      >\n         <span>Next</span>\n         <ChevronRightIcon className=\"size-4\" />\n      </PaginationLink>\n   )\n}\nPaginationNext.displayName = 'PaginationNext'\n\nfunction PaginationEllipsis({\n   className,\n   ...props\n}: React.ComponentProps<'span'>) {\n   return (\n      <span\n         aria-hidden\n         className={ny('flex size-9 items-center justify-center', className)}\n         {...props}\n      >\n         <DotsHorizontalIcon className=\"size-4\" />\n         <span className=\"sr-only\">More pages</span>\n      </span>\n   )\n}\nPaginationEllipsis.displayName = 'PaginationEllipsis'\n\nexport {\n   Pagination,\n   PaginationContent,\n   PaginationLink,\n   PaginationItem,\n   PaginationPrevious,\n   PaginationNext,\n   PaginationEllipsis,\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}
