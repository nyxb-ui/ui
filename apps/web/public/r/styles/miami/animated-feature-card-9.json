{
  "$schema": "https://nyxbui.design/schema/registry-item.json",
  "name": "animated-feature-card-9",
  "type": "registry:example",
  "author": "nyxbui (https://nyxbui.design)",
  "files": [
    {
      "path": "examples/animated-feature-card-9.tsx",
      "content": "\"use client\"\n\nimport { AnimatePresence, motion } from \"framer-motion\"\nimport type { ReactElement } from \"react\"\nimport React, { useEffect, useMemo, useState } from \"react\"\nimport { ny } from \"~/lib/utils\"\n\nexport const AnimatedList = React.memo(\n   ({\n      className,\n      children,\n      delay = 1000,\n   }: {\n      className?: string\n      children: React.ReactNode\n      delay?: number\n   }) => {\n      const [index, setIndex] = useState(0)\n      const childrenArray = React.Children.toArray(children)\n\n      useEffect(() => {\n         const interval = setInterval(() => {\n            setIndex((prevIndex) => (prevIndex + 1) % childrenArray.length)\n         }, delay)\n\n         return () => clearInterval(interval)\n      }, [childrenArray.length, delay])\n\n      const itemsToShow = useMemo(\n         () => childrenArray.slice(0, index + 1).reverse(),\n         [index, childrenArray],\n      )\n\n      return (\n         <div className={`flex flex-col items-center gap-4 ${className}`}>\n            <AnimatePresence>\n               {itemsToShow.map((item) => (\n                  <AnimatedListItem key={(item as ReactElement).key}>\n                     {item}\n                  </AnimatedListItem>\n               ))}\n            </AnimatePresence>\n         </div>\n      )\n   },\n)\n\nAnimatedList.displayName = \"AnimatedList\"\n\nexport function AnimatedListItem({ children }: { children: React.ReactNode }) {\n   const animations = {\n      initial: { scale: 0, opacity: 0 },\n      animate: { scale: 1, opacity: 1, originY: 0 },\n      exit: { scale: 0, opacity: 0 },\n      transition: { type: \"spring\", stiffness: 350, damping: 40 },\n   }\n\n   return (\n      <motion.div {...animations} layout className=\"mx-auto w-full\">\n         {children}\n      </motion.div>\n   )\n}\n\ninterface Item {\n   name: string\n   description: string\n   icon: string\n   color: string\n   time: string\n}\n\nlet notifications = [\n   {\n      name: \"Payment received\",\n      description: \"Nyxb UI\",\n      time: \"15m ago\",\n\n      icon: \"💸\",\n      color: \"#00C9A7\",\n   },\n   {\n      name: \"User signed up\",\n      description: \"Nyxb UI\",\n      time: \"10m ago\",\n      icon: \"👤\",\n      color: \"#FFB800\",\n   },\n   {\n      name: \"New message\",\n      description: \"Nyxb UI\",\n      time: \"5m ago\",\n      icon: \"💬\",\n      color: \"#FF3D71\",\n   },\n   {\n      name: \"New event\",\n      description: \"Nyxb UI\",\n      time: \"2m ago\",\n      icon: \"🗞️\",\n      color: \"#1E86FF\",\n   },\n]\n\nnotifications = Array.from({ length: 10 }, () => notifications).flat()\n\nfunction Notification({ name, description, icon, color, time }: Item) {\n   return (\n      <figure\n         className={ny(\n            \"relative mx-auto min-h-fit w-full max-w-[400px] cursor-pointer overflow-hidden rounded-lg p-4\",\n            // animation styles\n            \"transition-all duration-200 ease-in-out hover:scale-[103%]\",\n            // light styles\n            \"bg-white [box-shadow:0_0_0_1px_rgba(0,0,0,.03),0_2px_4px_rgba(0,0,0,.05),0_12px_24px_rgba(0,0,0,.05)]\",\n            // dark styles\n            \"transform-gpu dark:bg-transparent dark:backdrop-blur-md dark:[border:1px_solid_rgba(255,255,255,.1)] dark:[box-shadow:0_-20px_80px_-20px_#ffffff1f_inset]\",\n         )}\n      >\n         <div className=\"flex flex-row items-center gap-3\">\n            <div\n               className=\"flex size-10 items-center justify-center rounded-2xl\"\n               style={{\n                  backgroundColor: color,\n               }}\n            >\n               <span className=\"text-lg\">{icon}</span>\n            </div>\n            <div className=\"flex flex-col overflow-hidden\">\n               <figcaption className=\"flex flex-row items-center whitespace-pre text-lg font-medium dark:text-white \">\n                  <span className=\"text-sm sm:text-lg\">{name}</span>\n                  <span className=\"mx-1\">·</span>\n                  <span className=\"text-xs text-gray-500\">{time}</span>\n               </figcaption>\n               <p className=\"text-sm font-normal dark:text-white/60\">\n                  {description}\n               </p>\n            </div>\n         </div>\n      </figure>\n   )\n}\n\nexport default function FeatureCard9() {\n   return (\n      <div className=\"relative flex size-full max-h-[500px] min-h-[500px] max-w-lg transform-gpu flex-col justify-between overflow-hidden rounded-lg border bg-white [box-shadow:0_0_0_1px_rgba(0,0,0,.03),0_2px_4px_rgba(0,0,0,.05),0_12px_24px_rgba(0,0,0,.05)] dark:bg-black dark:[border:1px_solid_rgba(255,255,255,.1)] dark:[box-shadow:0_-20px_80px_-20px_#ffffff1f_inset]\">\n         <div className=\"flex items-center justify-center overflow-hidden\">\n            <AnimatedList>\n               {notifications.map((item, idx) => (\n                  <Notification {...item} key={idx} />\n               ))}\n            </AnimatedList>\n         </div>\n         <div className=\"flex flex-col items-start gap-y-1 border-t p-4 dark:border-neutral-800\">\n            <h2 className=\"text-xl font-semibold\">Notifications</h2>\n            <p className=\"text-base font-normal text-neutral-500 dark:text-neutral-400\">\n               Get realtime notifications for events you subscribe too\n            </p>\n         </div>\n      </div>\n   )\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}