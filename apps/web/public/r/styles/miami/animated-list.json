{
  "name": "animated-list",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion"
  ],
  "files": [
    {
      "path": "ui/animated-list.tsx",
      "content": "'use client'\n\nimport { AnimatePresence, motion } from 'framer-motion'\nimport type { ReactElement } from 'react'\nimport React, { useEffect, useMemo, useState } from 'react'\n\nexport const AnimatedList = React.memo(\n   ({\n      className,\n      children,\n      delay = 1000,\n   }: {\n      className?: string\n      children: React.ReactNode\n      delay?: number\n   }) => {\n      const [index, setIndex] = useState(0)\n      const childrenArray = React.Children.toArray(children)\n\n      useEffect(() => {\n         const interval = setInterval(() => {\n            setIndex(prevIndex => (prevIndex + 1) % childrenArray.length)\n         }, delay)\n\n         return () => clearInterval(interval)\n      }, [childrenArray.length, delay])\n\n      const itemsToShow = useMemo(\n         () => childrenArray.slice(0, index + 1).reverse(),\n         [index, childrenArray],\n      )\n\n      return (\n         <div className={`flex flex-col items-center gap-4 ${className}`}>\n            <AnimatePresence>\n               {itemsToShow.map(item => (\n                  <AnimatedListItem key={(item as ReactElement).key}>\n                     {item}\n                  </AnimatedListItem>\n               ))}\n            </AnimatePresence>\n         </div>\n      )\n   },\n)\n\nAnimatedList.displayName = 'AnimatedList'\n\nexport function AnimatedListItem({ children }: { children: React.ReactNode }) {\n   const animations = {\n      initial: { scale: 0, opacity: 0 },\n      animate: { scale: 1, opacity: 1, originY: 0 },\n      exit: { scale: 0, opacity: 0 },\n      transition: { type: 'spring', stiffness: 350, damping: 40 },\n   }\n\n   return (\n      <motion.div {...animations} layout className=\"mx-auto w-full\">\n         {children}\n      </motion.div>\n   )\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}
