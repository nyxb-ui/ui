{
  "name": "dialog",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-dialog"
  ],
  "files": [
    {
      "path": "ui/dialog.tsx",
      "content": "'use client'\n\nimport * as React from 'react'\nimport * as DialogPrimitive from '@radix-ui/react-dialog'\nimport { Cross2Icon } from '@radix-ui/react-icons'\n\nimport { ny } from '~/lib/utils'\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n   React.ElementRef<typeof DialogPrimitive.Overlay>,\n   React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n   <DialogPrimitive.Overlay\n      ref={ref}\n      className={ny(\n         'data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0  fixed inset-0 z-50 bg-black/80',\n         className,\n      )}\n      {...props}\n   />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n   React.ElementRef<typeof DialogPrimitive.Content>,\n   React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n   <DialogPortal>\n      <DialogOverlay />\n      <DialogPrimitive.Content\n         ref={ref}\n         className={ny(\n            'bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] fixed left-1/2 top-1/2 z-50 grid w-full max-w-lg -translate-x-1/2 -translate-y-1/2 gap-4 border p-6 shadow-lg duration-200 sm:rounded-lg',\n            className,\n         )}\n         {...props}\n      >\n         {children}\n         <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute right-4 top-4 rounded-sm opacity-70 transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:pointer-events-none\">\n            <Cross2Icon className=\"size-4\" />\n            <span className=\"sr-only\">Close</span>\n         </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n   </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nfunction DialogHeader({\n   className,\n   ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n   return (\n      <div\n         className={ny(\n            'flex flex-col space-y-1.5 text-center sm:text-left',\n            className,\n         )}\n         {...props}\n      />\n   )\n}\nDialogHeader.displayName = 'DialogHeader'\n\nfunction DialogFooter({\n   className,\n   ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n   return (\n      <div\n         className={ny(\n            'flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2',\n            className,\n         )}\n         {...props}\n      />\n   )\n}\nDialogFooter.displayName = 'DialogFooter'\n\nconst DialogTitle = React.forwardRef<\n   React.ElementRef<typeof DialogPrimitive.Title>,\n   React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n   <DialogPrimitive.Title\n      ref={ref}\n      className={ny(\n         'text-lg font-semibold leading-none tracking-tight',\n         className,\n      )}\n      {...props}\n   />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n   React.ElementRef<typeof DialogPrimitive.Description>,\n   React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n   <DialogPrimitive.Description\n      ref={ref}\n      className={ny('text-muted-foreground text-sm', className)}\n      {...props}\n   />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n   Dialog,\n   DialogPortal,\n   DialogOverlay,\n   DialogTrigger,\n   DialogClose,\n   DialogContent,\n   DialogHeader,\n   DialogFooter,\n   DialogTitle,\n   DialogDescription,\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}
