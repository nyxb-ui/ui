{
  "name": "stepper-sizes",
  "type": "registry:example",
  "registryDependencies": [
    "stepper"
  ],
  "files": [
    {
      "path": "example/stepper-sizes.tsx",
      "content": "import * as React from 'react'\n\nimport { Button } from '~/registry/miami/ui/button'\nimport { Label } from '~/registry/miami/ui/label'\nimport { RadioGroup, RadioGroupItem } from '~/registry/miami/ui/radio-group'\nimport type {\n   StepItem,\n   StepperProps,\n} from '~/registry/miami/ui/stepper'\nimport {\n   Step,\n   Stepper,\n   useStepper,\n} from '~/registry/miami/ui/stepper'\n\nconst steps = [\n   { label: 'Step 1' },\n   { label: 'Step 2' },\n   { label: 'Step 3' },\n] satisfies StepItem[]\n\nexport default function StepperDemo() {\n   const [size, setSize] = React.useState<StepperProps['size']>('md')\n\n   return (\n      <div className=\"flex w-full flex-col gap-4\">\n         <RadioGroup\n            className=\"mb-2 flex\"\n            value={size}\n            onValueChange={value => setSize(value as StepperProps['size'])}\n         >\n            <Label\n               htmlFor=\"sm\"\n               className=\"bg-background hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\n            >\n               <RadioGroupItem value=\"sm\" id=\"sm\" className=\"sr-only\" />\n               <h2 className=\"font-medium\">sm</h2>\n            </Label>\n            <Label\n               htmlFor=\"md\"\n               className=\"bg-background hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\n            >\n               <RadioGroupItem value=\"md\" id=\"md\" className=\"sr-only\" />\n               <h2 className=\"font-medium\">md</h2>\n            </Label>\n            <Label\n               htmlFor=\"lg\"\n               className=\"bg-background hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\n            >\n               <RadioGroupItem value=\"lg\" id=\"lg\" className=\"sr-only\" />\n               <h2 className=\"font-medium\">lg</h2>\n            </Label>\n         </RadioGroup>\n         <Stepper size={size} initialStep={0} steps={steps}>\n            {steps.map((stepProps, index) => {\n               return (\n                  <Step key={stepProps.label} {...stepProps}>\n                     <div className=\"bg-secondary text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\n                        <h1 className=\"text-xl\">\n                           Step\n                           {index + 1}\n                        </h1>\n                     </div>\n                  </Step>\n               )\n            })}\n            <Footer />\n         </Stepper>\n      </div>\n   )\n}\n\nfunction Footer() {\n   const {\n      nextStep,\n      prevStep,\n      resetSteps,\n      isDisabledStep,\n      hasCompletedAllSteps,\n      isLastStep,\n      isOptionalStep,\n   } = useStepper()\n   return (\n      <>\n         {hasCompletedAllSteps && (\n            <div className=\"bg-secondary text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\n               <h1 className=\"text-xl\">Woohoo! All steps completed! ðŸŽ‰</h1>\n            </div>\n         )}\n         <div className=\"flex w-full justify-end gap-2\">\n            {hasCompletedAllSteps\n               ? (\n                     <Button size=\"sm\" onClick={resetSteps}>\n                        Reset\n                     </Button>\n                  )\n               : (\n                     <>\n                        <Button\n                           disabled={isDisabledStep}\n                           onClick={prevStep}\n                           size=\"sm\"\n                           variant=\"secondary\"\n                        >\n                           Prev\n                        </Button>\n                        <Button size=\"sm\" onClick={nextStep}>\n                           {isLastStep ? 'Finish' : isOptionalStep ? 'Skip' : 'Next'}\n                        </Button>\n                     </>\n                  )}\n         </div>\n      </>\n   )\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}
