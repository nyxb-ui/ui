{
  "name": "code-comparison",
  "files": [
    {
      "name": "code-comparison.tsx",
      "content": "'use client'\n\nimport { FileIcon } from 'lucide-react'\nimport { useTheme } from 'next-themes'\nimport { useEffect, useState } from 'react'\nimport { codeToHtml } from 'shiki'\n\ninterface CodeComparisonProps {\n   beforeCode: string\n   afterCode: string\n   language: string\n   filename: string\n   lightTheme: string\n   darkTheme: string\n}\n\nexport default function CodeComparison({\n   beforeCode,\n   afterCode,\n   language,\n   filename,\n   lightTheme,\n   darkTheme,\n}: CodeComparisonProps) {\n   const { theme, systemTheme } = useTheme()\n   const [highlightedBefore, setHighlightedBefore] = useState('')\n   const [highlightedAfter, setHighlightedAfter] = useState('')\n\n   useEffect(() => {\n      const currentTheme = theme === 'system' ? systemTheme : theme\n      const selectedTheme = currentTheme === 'dark' ? darkTheme : lightTheme\n\n      async function highlightCode() {\n         const before = await codeToHtml(beforeCode, {\n            lang: language,\n            theme: selectedTheme,\n         })\n         const after = await codeToHtml(afterCode, {\n            lang: language,\n            theme: selectedTheme,\n         })\n         setHighlightedBefore(before)\n         setHighlightedAfter(after)\n      }\n\n      highlightCode()\n   }, [\n      theme,\n      systemTheme,\n      beforeCode,\n      afterCode,\n      language,\n      lightTheme,\n      darkTheme,\n   ])\n\n   const renderCode = (code: string, highlighted: string) => {\n      if (highlighted) {\n         return (\n            <div\n               className=\"bg-background h-full overflow-auto font-mono text-xs [&>pre]:h-full [&>pre]:!bg-transparent [&>pre]:p-4 [&_code]:break-all\"\n               dangerouslySetInnerHTML={{ __html: highlighted }}\n            />\n         )\n      }\n      else {\n         return (\n            <pre className=\"bg-background text-foreground h-full overflow-auto break-all p-4 font-mono text-xs\">\n               {code}\n            </pre>\n         )\n      }\n   }\n   return (\n      <div className=\"mx-auto w-full max-w-5xl\">\n         <div className=\"border-border relative w-full overflow-hidden rounded-xl border\">\n            <div className=\"md:divide-border relative grid md:grid-cols-2 md:divide-x\">\n               <div>\n                  <div className=\"bg-accent text-foreground flex items-center p-2 text-sm\">\n                     <FileIcon className=\"mr-2 size-4\" />\n                     {filename}\n                     <span className=\"ml-auto\">before</span>\n                  </div>\n                  {renderCode(beforeCode, highlightedBefore)}\n               </div>\n               <div>\n                  <div className=\"bg-accent text-foreground flex items-center p-2 text-sm\">\n                     <FileIcon className=\"mr-2 size-4\" />\n                     {filename}\n                     <span className=\"ml-auto\">after</span>\n                  </div>\n                  {renderCode(afterCode, highlightedAfter)}\n               </div>\n            </div>\n            <div className=\"bg-accent text-foreground absolute left-1/2 top-1/2 flex size-8 -translate-x-1/2 -translate-y-1/2 items-center justify-center rounded-md text-xs\">\n               VS\n            </div>\n         </div>\n      </div>\n   )\n}\n"
    }
  ],
  "type": "components:ui"
}
