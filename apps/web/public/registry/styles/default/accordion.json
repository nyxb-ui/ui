{
  "name": "accordion",
  "dependencies": [
    "@radix-ui/react-accordion"
  ],
  "files": [
    {
      "name": "accordion.tsx",
      "content": "'use client'\n\nimport * as React from 'react'\nimport * as AccordionPrimitive from '@radix-ui/react-accordion'\nimport { ChevronDown } from 'lucide-react'\n\nimport { ny } from '~/lib/utils'\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n   React.ElementRef<typeof AccordionPrimitive.Item>,\n   React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n   <AccordionPrimitive.Item\n      ref={ref}\n      className={ny('border-b', className)}\n      {...props}\n   />\n))\nAccordionItem.displayName = 'AccordionItem'\n\nconst AccordionTrigger = React.forwardRef<\n   React.ElementRef<typeof AccordionPrimitive.Trigger>,\n   React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n   <AccordionPrimitive.Header className=\"flex\">\n      <AccordionPrimitive.Trigger\n         ref={ref}\n         className={ny(\n            'flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180',\n            className,\n         )}\n         {...props}\n      >\n         {children}\n         <ChevronDown className=\"size-4 shrink-0 transition-transform duration-200\" />\n      </AccordionPrimitive.Trigger>\n   </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n   React.ElementRef<typeof AccordionPrimitive.Content>,\n   React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n   <AccordionPrimitive.Content\n      ref={ref}\n      className=\"data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down overflow-hidden text-sm transition-all\"\n      {...props}\n   >\n      <div className={ny('pb-4 pt-0', className)}>{children}</div>\n   </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"
    }
  ],
  "type": "components:ui"
}