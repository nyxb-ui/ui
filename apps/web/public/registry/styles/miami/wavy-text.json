{
  "name": "wavy-text",
  "files": [
    {
      "name": "wavy-text.tsx",
      "content": "'use client'\n\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { useMemo } from 'react'\nimport { ny } from '~/lib/utils'\n\ninterface WavyTextProps {\n   word: string\n   className?: string\n   variant?: {\n      hidden: { y: number }\n      visible: { y: number }\n   }\n   duration?: number\n   delay?: number\n}\nfunction WavyText({\n   word,\n   className,\n   variant,\n   duration = 0.5,\n   delay = 0.05,\n}: WavyTextProps) {\n   const defaultVariants = {\n      hidden: { y: 10 },\n      visible: { y: -10 },\n   }\n   const combinedVariants = variant || defaultVariants\n   const characters = useMemo(() => word.split(''), [word])\n   return (\n      <div className=\"flex justify-center space-x-2 overflow-hidden p-3\">\n         <AnimatePresence>\n            {characters.map((char, i) => (\n               <motion.h1\n                  key={i}\n                  initial=\"hidden\"\n                  animate=\"visible\"\n                  exit=\"hidden\"\n                  variants={combinedVariants}\n                  transition={{\n                     yoyo: Infinity,\n                     duration,\n                     delay: i * delay,\n                  }}\n                  className={ny(\n                     className,\n                     'font-display text-center text-4xl font-bold tracking-[-0.15em] md:text-7xl',\n                  )}\n               >\n                  {char}\n               </motion.h1>\n            ))}\n         </AnimatePresence>\n      </div>\n   )\n}\n\nexport default WavyText\n"
    }
  ],
  "type": "components:ui"
}