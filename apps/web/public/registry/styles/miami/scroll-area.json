{
  "name": "scroll-area",
  "dependencies": [
    "@radix-ui/react-scroll-area"
  ],
  "files": [
    {
      "name": "scroll-area.tsx",
      "content": "'use client'\n\nimport * as React from 'react'\nimport * as ScrollAreaPrimitive from '@radix-ui/react-scroll-area'\n\nimport { ny } from '~/lib/utils'\n\nconst ScrollArea = React.forwardRef<\n   React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n   <ScrollAreaPrimitive.Root\n      ref={ref}\n      className={ny('relative overflow-hidden', className)}\n      {...props}\n   >\n      <ScrollAreaPrimitive.Viewport className=\"size-full rounded-[inherit]\">\n         {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n   </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n   React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n   React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = 'vertical', ...props }, ref) => (\n   <ScrollAreaPrimitive.ScrollAreaScrollbar\n      ref={ref}\n      orientation={orientation}\n      className={ny(\n         'flex touch-none select-none transition-colors',\n         orientation === 'vertical'\n         && 'h-full w-2.5 border-l border-l-transparent p-px',\n         orientation === 'horizontal'\n         && 'h-2.5 flex-col border-t border-t-transparent p-px',\n         className,\n      )}\n      {...props}\n   >\n      <ScrollAreaPrimitive.ScrollAreaThumb className=\"bg-border relative flex-1 rounded-full\" />\n   </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"
    }
  ],
  "type": "components:ui"
}