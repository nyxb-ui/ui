{
  "name": "breadcrumb",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "name": "breadcrumb.tsx",
      "content": "import * as React from 'react'\nimport { ChevronRightIcon, DotsHorizontalIcon } from '@radix-ui/react-icons'\nimport { Slot } from '@radix-ui/react-slot'\n\nimport { ny } from '~/lib/utils'\n\nconst Breadcrumb = React.forwardRef<\n   HTMLElement,\n   React.ComponentPropsWithoutRef<'nav'> & {\n      separator?: React.ReactNode\n   }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = 'Breadcrumb'\n\nconst BreadcrumbList = React.forwardRef<\n   HTMLOListElement,\n   React.ComponentPropsWithoutRef<'ol'>\n>(({ className, ...props }, ref) => (\n   <ol\n      ref={ref}\n      className={ny(\n         'text-muted-foreground flex flex-wrap items-center gap-1.5 break-words text-sm sm:gap-2.5',\n         className,\n      )}\n      {...props}\n   />\n))\nBreadcrumbList.displayName = 'BreadcrumbList'\n\nconst BreadcrumbItem = React.forwardRef<\n   HTMLLIElement,\n   React.ComponentPropsWithoutRef<'li'>\n>(({ className, ...props }, ref) => (\n   <li\n      ref={ref}\n      className={ny('inline-flex items-center gap-1.5', className)}\n      {...props}\n   />\n))\nBreadcrumbItem.displayName = 'BreadcrumbItem'\n\nconst BreadcrumbLink = React.forwardRef<\n   HTMLAnchorElement,\n   React.ComponentPropsWithoutRef<'a'> & {\n      asChild?: boolean\n   }\n>(({ asChild, className, ...props }, ref) => {\n   const Comp = asChild ? Slot : 'a'\n\n   return (\n      <Comp\n         ref={ref}\n         className={ny('hover:text-foreground transition-colors', className)}\n         {...props}\n      />\n   )\n})\nBreadcrumbLink.displayName = 'BreadcrumbLink'\n\nconst BreadcrumbPage = React.forwardRef<\n   HTMLSpanElement,\n   React.ComponentPropsWithoutRef<'span'>\n>(({ className, ...props }, ref) => (\n   <span\n      ref={ref}\n      role=\"link\"\n      aria-disabled=\"true\"\n      aria-current=\"page\"\n      className={ny('text-foreground font-normal', className)}\n      {...props}\n   />\n))\nBreadcrumbPage.displayName = 'BreadcrumbPage'\n\nfunction BreadcrumbSeparator({\n   children,\n   className,\n   ...props\n}: React.ComponentProps<'li'>) {\n   return (\n      <li\n         role=\"presentation\"\n         aria-hidden=\"true\"\n         className={ny('[&>svg]:size-3.5', className)}\n         {...props}\n      >\n         {children ?? <ChevronRightIcon />}\n      </li>\n   )\n}\nBreadcrumbSeparator.displayName = 'BreadcrumbSeparator'\n\nfunction BreadcrumbEllipsis({\n   className,\n   ...props\n}: React.ComponentProps<'span'>) {\n   return (\n      <span\n         role=\"presentation\"\n         aria-hidden=\"true\"\n         className={ny('flex size-9 items-center justify-center', className)}\n         {...props}\n      >\n         <DotsHorizontalIcon className=\"size-4\" />\n         <span className=\"sr-only\">More</span>\n      </span>\n   )\n}\nBreadcrumbEllipsis.displayName = 'BreadcrumbEllipsis'\n\nexport {\n   Breadcrumb,\n   BreadcrumbList,\n   BreadcrumbItem,\n   BreadcrumbLink,\n   BreadcrumbPage,\n   BreadcrumbSeparator,\n   BreadcrumbEllipsis,\n}\n"
    }
  ],
  "type": "components:ui"
}