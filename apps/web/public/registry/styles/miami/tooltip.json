{
  "name": "tooltip",
  "dependencies": [
    "@radix-ui/react-tooltip"
  ],
  "files": [
    {
      "name": "tooltip.tsx",
      "content": "'use client'\n\nimport * as React from 'react'\nimport * as TooltipPrimitive from '@radix-ui/react-tooltip'\nimport { type VariantProps, cva } from 'class-variance-authority'\n\nimport { ny } from '~/lib/utils'\n\nconst tooltipVariants = cva(\n   'z-50 overflow-hidden rounded-md px-3 py-1.5 text-sm animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n   {\n      variants: {\n         variant: {\n            default: 'bg-primary text-primary-foreground',\n            outline: 'border bg-popover text-popover-foreground shadow-md',\n            secondary: 'bg-secondary text-secondary-foreground',\n         },\n      },\n      defaultVariants: {\n         variant: 'default',\n      },\n   },\n)\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipArrow = TooltipPrimitive.TooltipArrow\n\nexport interface TooltipProps\n   extends React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>,\n   VariantProps<typeof tooltipVariants> {};\n\nconst TooltipContent = React.forwardRef<\n   React.ElementRef<typeof TooltipPrimitive.Content>,\n   TooltipProps\n>(({ className, variant, sideOffset = 4, ...props }, ref) => (\n   <TooltipPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={ny(tooltipVariants({ variant, className }))}\n      {...props}\n   />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipArrow, TooltipContent, TooltipProvider }\n"
    }
  ],
  "type": "components:ui"
}
